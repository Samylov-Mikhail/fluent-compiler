# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - "3.7"
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
        - "pypy3.6"
        - "pypy3.7"
        - "pypy3.8"
        - "pypy3.9"
        - "pypy3.10"
        include:
        # Python 3.6 is not available on ubuntu-latest,
        # so use ubuntu-20.04:
        - python-version: "3.6"
          os: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install .
        pip install -r requirements-test.txt
    - name: Test with pytest
      run: |
        pytest

  lint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install -U pip
        pip install .
        pip install flake8 check-manifest
    - name: Lint with isort
      uses: isort/isort-action@master
    - name: Lint with flake8
      if: success() || failure()
      run: |
        flake8 --version
        flake8
    - name: Lint with check-manifest
      if: success() || failure()
      run: |
        check-manifest
    - name: Lint with black
      if: success() || failure()
      uses: psf/black@stable
